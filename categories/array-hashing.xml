<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Erdem Karaköylü 's DS corner (Posts about array hashing)</title><link>https://madhatter106.github.io/</link><description></description><atom:link href="https://madhatter106.github.io/DataScienceCorner/categories/array-hashing.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Tue, 16 Jul 2019 14:53:02 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Faster comparison of two Numpy arrays</title><link>https://madhatter106.github.io/DataScienceCorner/posts/speeding-up-numpy-array-comparison/</link><dc:creator>Erdem Karaköylü</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This short post details an easy way to speed up array comparison. My problem was that I had to compare two 3D arrays, A and B, These arrays are different only in their first dimension, and have equal $2^{nd}$ and $3^{rd}$ dimensions. I needed to find out whether any of the 2D arrays contained along the first dimension of, say, A were also present along the first dimension of B. The first approach one might try is based on nested for-loops. This becomes quickly unwieldy with even moderate-sized arrays. The faster alternative is to hash the 2D data in one of the arrays and store the hash table; I prefer to do that with the smaller array for space use efficiency. The next step is to go along the first dimension of the other array, hash the data and compare. This ends up requiring only serial for-loops. Note here that the Python version is 3.6, which implements numpy ndarray hashing differently than 2.x. Note also the use of &lt;a href="https://cito.github.io/blog/f-strings/"&gt;f-strings; a nifty new feature of python 3.6.&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;&lt;a href="https://madhatter106.github.io/DataScienceCorner/posts/speeding-up-numpy-array-comparison/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>array hashing</category><category>Numpy</category><guid>https://madhatter106.github.io/DataScienceCorner/posts/speeding-up-numpy-array-comparison/</guid><pubDate>Mon, 25 Sep 2017 14:52:36 GMT</pubDate></item></channel></rss>